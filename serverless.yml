service: laravel-demo

# laravel用のphpを動かすruntimeはこちら
# provider:
#   name: aws
#   region: ap-northeast-1
#   stage: dev
#   runtime: provided.al2

# オーソライザーはこちらで動く
provider:
  name: aws
  # runtime: nodejs10.x
  region: ap-northeast-1
  stg: ${opt:stage}

plugins:
  - ./vendor/bref/bref
  - serverless-plugin-ifelse

package:
  exclude:
    - node_modules/**
    - public/storage
    - storage/**
    - tests/**

# 変数定義：オーソライザー用に追加　
custom:
  definitions:
    authorizer:
      # Lambda関数名
      name: authorizer2
      # キャッシュ時間
      resultTtlInSeconds: 0
      # Lambda関数に渡すヘッダー名
      identitySource: method.request.header.Authorization
      # Lambdaイベントペイロード
      type: request

functions:
  website:
    runtime: provided.al2
    handler: public/index.php
    # handler: handler.hello
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    layers:
      - ${bref:layer.php-73-fpm}
    events:
      # - http: 'ANY /'
      # - http: 'ANY /{proxy+}'
      - http:
          path: '/'
          method: any
          authorizer: ${self:custom.definitions.authorizer}
          # # ${file}はyaml or json
          # serverlessIfElse:
          #   - If: '"${file(./development.yml):app_dev}" == "local"'
          #     Set:
          #       # Lambdaオーソライザーの設定
          #       authorizer: ${self:custom.definitions.authorizer}

  authorizer:
    runtime: nodejs10.x
    handler: authorizer.handler

  artisan:
    handler: artisan
    timeout: 120 # in seconds
    layers:
      - ${bref:layer.php-73} # PHP
      - ${bref:layer.console} # The "console" layer

# [AWSリソースの設定]APIGateWayにオーソライザーを設定
# オーソライザが401を返したときに「WWW-Authenticate」ヘッダを返却させるための設定です
resources:
  Resources:
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.WWW-Authenticate: "'Basic'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'